[{"C:\\GitHub\\daveyloper-react\\src\\index.js":"1","C:\\GitHub\\daveyloper-react\\src\\App.js":"2","C:\\GitHub\\daveyloper-react\\src\\reportWebVitals.js":"3","C:\\GitHub\\daveyloper-react\\src\\Nav.js":"4","C:\\GitHub\\daveyloper-react\\src\\Footer.js":"5","C:\\GitHub\\daveyloper-react\\src\\components\\home\\home.js":"6","C:\\GitHub\\daveyloper-react\\src\\components\\projects\\Projects.js":"7","C:\\GitHub\\daveyloper-react\\src\\components\\hamburger\\hamburger.js":"8","C:\\GitHub\\daveyloper-react\\src\\components\\contact\\Contact.js":"9","C:\\GitHub\\daveyloper-react\\src\\components\\home\\projectcard.js":"10","C:\\GitHub\\daveyloper-react\\src\\components\\projects\\mainprojectcard.js":"11","C:\\GitHub\\daveyloper-react\\src\\components\\works\\quote-generator\\quote-generator.js":"12","C:\\GitHub\\daveyloper-react\\src\\components\\works\\markdownPreviewer\\markdownpreviewer.js":"13","C:\\GitHub\\daveyloper-react\\src\\components\\works\\drumPad\\drumPad.js":"14","C:\\GitHub\\daveyloper-react\\src\\components\\works\\calculator\\calculator.js":"15","C:\\GitHub\\daveyloper-react\\src\\components\\home\\About.js":"16","C:\\GitHub\\daveyloper-react\\src\\components\\works\\25timer\\25timer.js":"17","C:\\GitHub\\daveyloper-react\\src\\components\\works\\carousel\\carousel.js":"18","C:\\GitHub\\daveyloper-react\\src\\components\\works\\carousel\\slide.js":"19","C:\\GitHub\\daveyloper-react\\src\\components\\reusable\\button-lifter\\buttonLifter.js":"20","C:\\GitHub\\daveyloper-react\\src\\components\\works\\carousel\\demo\\carouselView.js":"21"},{"size":559,"mtime":1612370856824,"results":"22","hashOfConfig":"23"},{"size":2140,"mtime":1617697945923,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1612263629559,"results":"25","hashOfConfig":"23"},{"size":1079,"mtime":1616006408217,"results":"26","hashOfConfig":"23"},{"size":1123,"mtime":1613641221279,"results":"27","hashOfConfig":"23"},{"size":3633,"mtime":1617702721200,"results":"28","hashOfConfig":"23"},{"size":6880,"mtime":1617702463339,"results":"29","hashOfConfig":"23"},{"size":953,"mtime":1616006451377,"results":"30","hashOfConfig":"23"},{"size":2215,"mtime":1615980330483,"results":"31","hashOfConfig":"23"},{"size":1823,"mtime":1615980577704,"results":"32","hashOfConfig":"23"},{"size":1802,"mtime":1615919103795,"results":"33","hashOfConfig":"23"},{"size":2282,"mtime":1615625125235,"results":"34","hashOfConfig":"23"},{"size":2433,"mtime":1615625125208,"results":"35","hashOfConfig":"23"},{"size":6363,"mtime":1616136193105,"results":"36","hashOfConfig":"23"},{"size":5972,"mtime":1616485571581,"results":"37","hashOfConfig":"23"},{"size":6784,"mtime":1617957004312,"results":"38","hashOfConfig":"23"},{"size":5060,"mtime":1616584096880,"results":"39","hashOfConfig":"23"},{"size":2612,"mtime":1617727067911,"results":"40","hashOfConfig":"23"},{"size":656,"mtime":1617371755015,"results":"41","hashOfConfig":"23"},{"size":563,"mtime":1617697278729,"results":"42","hashOfConfig":"23"},{"size":3009,"mtime":1617864383444,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"15zg1md",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"47"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"C:\\GitHub\\daveyloper-react\\src\\index.js",["97"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\"\r\n\r\nReactDOM.render(\r\n \r\n    <React.StrictMode>\r\n    <App />\r\n    </React.StrictMode>, document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["98","99"],"C:\\GitHub\\daveyloper-react\\src\\App.js",[],"C:\\GitHub\\daveyloper-react\\src\\reportWebVitals.js",[],"C:\\GitHub\\daveyloper-react\\src\\Nav.js",["100"],"import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./nav.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCode } from '@fortawesome/free-solid-svg-icons' \r\nimport Hamburger from \"./components/hamburger/hamburger\"\r\n \r\n\r\n\r\nfunction Header() {\r\n   \r\n    return(\r\n        \r\n        <div className=\"nav-container\">\r\n            \r\n            <div id=\"logo-div\">\r\n                <h1 id=\"logo-text\"><a id=\"logo-link\" href=\"/\"><FontAwesomeIcon icon={faCode} /> DaveyLoper</a></h1>\r\n            </div>\r\n            <ul className=\"nav-list\">\r\n                <Linkie to=\"/\" text=\"Home\" />\r\n                <Linkie to=\"/projects\" text=\"Projects\" />\r\n                <Linkie to=\"/contact\" text=\"Contact\" />\r\n            </ul>\r\n        </div>\r\n        \r\n    )\r\n    }\r\n\r\n\r\n\r\nfunction Linkie(props) {\r\nreturn(\r\n    \r\n    <Link to={props.to} style={{textDecoration: \"none\"}}>\r\n        <li className=\"nav-link\">\r\n            <div className=\"nav-link-div\">{props.text}</div>\r\n        </li>\r\n    </Link>\r\n    \r\n)}\r\n\r\nexport default Header","C:\\GitHub\\daveyloper-react\\src\\Footer.js",[],"C:\\GitHub\\daveyloper-react\\src\\components\\home\\home.js",[],"C:\\GitHub\\daveyloper-react\\src\\components\\projects\\Projects.js",[],"C:\\GitHub\\daveyloper-react\\src\\components\\hamburger\\hamburger.js",["101","102"],"import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./hamburger.css\"\r\nimport { slide as Menu } from \"react-burger-menu\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEnvelopeOpen, faHome, faAddressCard, faLaptopCode } from '@fortawesome/free-solid-svg-icons'\r\n \r\n\r\n\r\n\r\nclass Hamburger extends React.Component {\r\n    showSettings (event) {\r\n        event.PreventDefault ();\r\n    }\r\n    \r\n    render () {\r\n\r\n  return (\r\n      <div id=\"hamburger-div\">\r\n  <Menu right width={ '70vw'}>\r\n     <a id=\"home\" className=\"menu-item\" href=\"/\">Home <FontAwesomeIcon icon={faHome} fixedWidth /></a>\r\n     <a id=\"projects\" className=\"menu-item\" href=\"/projects\">Projects <FontAwesomeIcon icon={faLaptopCode} fixedWidth /></a>\r\n     <a id=\"contact\" className=\"menu-item\" href=\"/contact\">Contact <FontAwesomeIcon icon={faEnvelopeOpen} fixedWidth /></a>\r\n</Menu>\r\n    </div>\r\n)\r\n    }\r\n}\r\n\r\nexport default Hamburger","C:\\GitHub\\daveyloper-react\\src\\components\\contact\\Contact.js",[],"C:\\GitHub\\daveyloper-react\\src\\components\\home\\projectcard.js",[],"C:\\GitHub\\daveyloper-react\\src\\components\\projects\\mainprojectcard.js",[],"C:\\GitHub\\daveyloper-react\\src\\components\\works\\quote-generator\\quote-generator.js",["103","104","105"],"import React, {useState, useEffect} from \"react\"\r\nimport \"./quote_generator.css\"\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\r\nimport {faTwitter} from \"@fortawesome/free-brands-svg-icons\"\r\n\r\n\r\nfunction QuoteGenerator() {\r\n    \r\n    useEffect(() => {\r\n        fetch(\"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\")\r\n        .then(data => data.json())\r\n        .then(quotes => {(setAllQuotes(quotes))\r\n            const randNum = Math.floor(Math.random() * quotes.length)\r\n            setAuthor(quotes[randNum].author)\r\n            setText(quotes[randNum].quote)\r\n    })        \r\n        }, []);\r\n\r\n\r\n\r\n    const [allQuotes, setAllQuotes] = useState([])\r\n    const [quoteIndex, setQuoteIndex] = useState(randomNumber())\r\n    const [text, setText] = useState(\"Loading...\")\r\n    const [author, setAuthor] = useState(\"Loading...\")\r\n    const [chosenQuote, setChosenQuote] = useState({})\r\n    \r\n    function randomNumber() {return Math.floor(Math.random() * allQuotes.length)} //CNAHGE THIS SO THAT ITS * ALLQUOTES.LENGTH \r\n    \r\n  \r\n    \r\n    function handleClick() {\r\n        let number = randomNumber()\r\n\r\n        setChosenQuote(allQuotes[number])\r\n        setText(allQuotes[number].quote);\r\n        setAuthor(allQuotes[number].author);\r\n        console.log(allQuotes.length)\r\n        \r\n    } \r\n\r\n        \r\n        console.log(chosenQuote)\r\n        const ShareableText = `${text} - ${author}`\r\n        const TweetLink = `https://twitter.com/intent/tweet?text=${encodeURIComponent(ShareableText)}`\r\n      \r\n// NEED TO CALL AN ITEM WITHIN THIS OBJECT\r\n    return (\r\n\r\n           \r\n\r\n\r\n        <div id=\"quote-container\">\r\n            <div id=\"quote-box\">\r\n                <h2 id=\"quote-title\">Random Quote Generator</h2>\r\n                <hr id=\"quote-hr\"/>\r\n                <h1 id=\"quote-text\">{text}</h1>\r\n                <p id=\"quote-author\">{author}</p>\r\n                <button id=\"new-quote\" onClick={handleClick} title=\"Get a new quote\">New Quote</button>\r\n                <a id=\"tweet-quote\" href={TweetLink} target=\"_blank\" title=\"Share on Twitter\"><FontAwesomeIcon icon={faTwitter} /></a>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuoteGenerator","C:\\GitHub\\daveyloper-react\\src\\components\\works\\markdownPreviewer\\markdownpreviewer.js",["106","107"],"import React, {useState, useEffect} from \"react\"\r\nimport \"./markdownpreviewer.css\"\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\r\nimport {faExpand, faCompress } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\n\r\nfunction MarkdownPreviewer() {\r\n\r\n    const [text, setText] = useState(\"\")\r\n    const [editorExpanded, setEditorExpanded] = useState(false)\r\n    const [viewerExpanded, setViewerExpanded] = useState(false)\r\n    let marked = require(\"marked\");\r\n\r\n    function edExp() {\r\n        return setEditorExpanded(!editorExpanded)        \r\n    }\r\n    function outExp() {\r\n        return setViewerExpanded(!viewerExpanded)\r\n    }\r\n    \r\n    const placeholder = ` # Header 1  \\n  [link](google.com)   \\n  ##  d  \\n  **bold** \\n > block quote \\n ![Logo](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"My Logo\") \\n - a list \r\n\r\n   \r\n    \\`some code\\` \r\n    \\`\\`\\`\r\n    code block\r\n    \\`\\`\\`\r\n    `\r\n   \r\n\r\n    return (\r\n\r\n        <div className=\"markdown-container\">\r\n\r\n            <div className={editorExpanded ? \"markdown-editor-box-expanded\" : \"markdown-editor-box\"}>\r\n                <div id=\"markdown-editor-toolbar\">\r\n                    <h2 className=\"markdown-toolbar-text\">Markdown Editor</h2>\r\n                <button className=\"markdownbutton\" onClick={edExp}>{editorExpanded ? <FontAwesomeIcon icon={faCompress}/> : <FontAwesomeIcon icon={faExpand} />}</button>\r\n                </div>\r\n                <textarea name=\"markdown\" id=\"editor\" className={editorExpanded ? \"markdown-editor-expanded\" : \"markdown-editor\"} cols=\"30\" rows=\"10\" value={text}\r\n                 onChange={e => setText(e.target.value)} >\r\n                 </textarea>\r\n            </div>\r\n\r\n\r\n           <div className={viewerExpanded ? \"markdown-output-box-expanded\" : \"markdown-output-box\"}>\r\n               <div id=\"markdown-output-toolbar\">\r\n               <h2 className=\"markdown-toolbar-text\">Markdown Previewer</h2>\r\n               <button className=\"markdownbutton\" onClick={outExp}>{viewerExpanded ? \r\n               <FontAwesomeIcon icon={faCompress}/> : <FontAwesomeIcon icon={faExpand} />}</button>\r\n\r\n               </div>\r\n                <div id=\"preview\" dangerouslySetInnerHTML={{__html: marked(text)}} className=\"markdown-output\">\r\n                    \r\n                </div>          \r\n            </div>\r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarkdownPreviewer","C:\\GitHub\\daveyloper-react\\src\\components\\works\\drumPad\\drumPad.js",["108","109"],"import React, {useState, useEffect} from \"react\"\r\nimport \"./drumPad.css\"\r\nimport {Helmet} from \"react-helmet\"\r\nimport Heater1 from \"./Heater-1.mp3\"\r\nimport Heater2 from \"./Heater-2.mp3\"\r\nimport Heater3 from \"./Heater-3.mp3\"\r\nimport useSound from \"use-sound\"\r\nimport ClosedHH from './Cev_H2.mp3'\r\nimport Kick from './RP4_KICK_1.mp3'\r\nimport KicknHat from './Kick_n_Hat.mp3'\r\nimport OpenHH from './Dsc_Oh.mp3'\r\nimport Heater6 from './Heater-6.mp3'\r\nimport Heater4 from './Heater-4_1.mp3'\r\nimport useKeyPress from \"react-use-keypress\"\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\r\nimport {faVolumeOff} from \"@fortawesome/free-solid-svg-icons\"\r\n\r\n\r\nfunction DrumPad() {\r\n    const drumBank = [\r\n        {\r\n          keyTrigger: 'q',\r\n          id: 'Heater-1',\r\n          url: Heater1\r\n        },\r\n        {\r\n          keyTrigger: 'w',\r\n          id: 'Heater-2',\r\n          url: Heater2\r\n        },\r\n        {\r\n          keyTrigger: 'e',\r\n          id: 'Heater-3',\r\n          url: Heater3\r\n        },\r\n        {\r\n          keyTrigger: 'a',\r\n          id: 'Heater-4',\r\n          url: Heater4\r\n        },\r\n        {\r\n          keyTrigger: 's',\r\n          id: 'Clap',\r\n          url: Heater6\r\n        },\r\n        {\r\n          keyTrigger: 'd',\r\n          id: 'Open-HH',\r\n          url:  OpenHH\r\n        },\r\n        {\r\n          keyTrigger: 'z',\r\n          id: \"Kick-n'-Hat\",\r\n          url: KicknHat\r\n        },\r\n        {\r\n          keyTrigger: 'x',\r\n          id: 'Kick',\r\n          url: Kick\r\n        },\r\n        {\r\n          keyTrigger: 'c',\r\n          id: 'Closed-HH',\r\n          url: ClosedHH\r\n        },\r\n        \r\n      ];\r\n\r\n      \r\n     \r\n     \r\n      const [volume, setVolume] = useState(1)\r\n      let volumeNum = volume*100\r\n      const [powerOn, setPowerOn] = useState(true)\r\n      const [text, setText] = useState(\"\");\r\n      let audio0 = () => {sound0()}\r\n      let audio1 = () => {sound1()}\r\n      let audio2 = () => {sound2()}\r\n      let audio3 = () => {sound3()}\r\n      let audio4 = () => {sound4()}\r\n      let audio5 = () => {sound5()}\r\n      let audio6 = () => {sound6()}\r\n      let audio7 = () => {sound7()}\r\n      let audio8 = () => {sound8()}\r\n      let [sound0] = useSound(drumBank[0].url, {volume: volume} )\r\n      let [sound1] = useSound(drumBank[1].url, {volume: volume} ) \r\n      let [sound2] = useSound(drumBank[2].url, {volume: volume} ) \r\n      let [sound3] = useSound(drumBank[3].url, {volume: volume} ) \r\n      let [sound4] = useSound(drumBank[4].url, {volume: volume} )\r\n      let [sound5] = useSound(drumBank[5].url, {volume: volume} )\r\n      let [sound6] = useSound(drumBank[6].url, {volume: volume} )\r\n      let [sound7] = useSound(drumBank[7].url, {volume: volume} )\r\n      let [sound8] = useSound(drumBank[8].url, {volume: volume} )\r\n      \r\n      \r\n      \r\n     \r\n\r\n    useKeyPress([\"q\", \"w\", \"e\", \"a\", \"s\", \"d\", \"z\", \"x\", \"c\"], (event) => {\r\n      if (event.key === \"q\") {\r\n        playThis(0) \r\n      } else\r\n      if (event.key === \"w\") {\r\n        playThis(1) \r\n      } else\r\n      if (event.key === \"e\") {\r\n        playThis(2) \r\n      } else\r\n      if (event.key === \"a\") {\r\n        playThis(3) \r\n      } else\r\n      if (event.key === \"s\") {\r\n        playThis(4) \r\n      } else\r\n      if (event.key === \"d\") {\r\n        playThis(5) \r\n      } else\r\n      if (event.key === \"z\") {\r\n        playThis(6) \r\n      } else\r\n      if (event.key === \"x\") {\r\n        playThis(7) \r\n      } else\r\n      if (event.key === \"c\") {\r\n        playThis(8) \r\n      } \r\n    })\r\n     \r\n    \r\n\r\n   function playThis(num) {\r\n  if (powerOn === true) \r\n         { setText(drumBank[num].id)\r\n          switch(num) {\r\n          case 0: audio0()\r\n          break;\r\n          case 1: audio1()\r\n          break;\r\n          case 2: audio2()\r\n          break;\r\n          case 3: audio3()\r\n          break;\r\n          case 4: audio4()\r\n          break;\r\n          case 5: audio5()\r\n          break;\r\n          case 6: audio6()\r\n          break;\r\n          case 7: audio7()\r\n          break;\r\n          case 8: audio8()\r\n          break;\r\n        }\r\n      }\r\n        else {setText(\"Power is off\")}\r\n      } \r\n\r\n\r\n     \r\n    return (\r\n        \r\n        <div id=\"drum-machine\" className=\"drumpad-container\" >\r\n                   <Helmet>\r\n                     <title>Drumpad - Davit Lursmanashvili</title>\r\n                     <meta type=\"description\" content=\"Davit Lursmanashvili. This project is a Drumpad that uses \r\n                     HTML, CSS and React to play sounds on key and button presses.\" />\r\n                  </Helmet>\r\n\r\n            <h3 id={powerOn ? \"drum-power-text-on\" : \"drum-power-text-off\"}>Power: </h3>\r\n            <div id=\"drum-power-div\" onClick={() => setPowerOn(!powerOn)}>\r\n              <div id={powerOn ? \"drum-power-button-on\" : \"drum-power-button-off\"}>\r\n\r\n              </div>\r\n            </div>\r\n            <div id=\"display\" className=\"drumpad-display\">\r\n                <p className=\"drumpad-text\">{text}</p>\r\n            </div>\r\n            <div id=\"drum-volume-div\">\r\n            <h3 id=\"drum-volume-value\"><FontAwesomeIcon icon={faVolumeOff} />  {volumeNum}</h3>\r\n              <input \r\n              id=\"drum-volume-bar\"\r\n              type=\"range\"\r\n               min={0}\r\n               max={1} \r\n               step={0.01} \r\n               value={volume} \r\n               onChange={(event)=> setVolume(event.target.valueAsNumber)} />\r\n               \r\n            </div>\r\n            <button className=\"drum-pad\" id=\"drum-pad-1\" onClick={() => playThis(0)}>Q</button>\r\n            <button className=\"drum-pad\" id=\"drum-pad-2\" onClick={() => playThis(1)}>W</button>\r\n            <button className=\"drum-pad\" id=\"drum-pad-3\" onClick={() => playThis(2)}>E</button>\r\n            <button className=\"drum-pad\" id=\"drum-pad-4\" onClick={() => playThis(3)}>A</button>\r\n            <button className=\"drum-pad\" id=\"drum-pad-5\" onClick={() => playThis(4)}>S</button>\r\n            <button className=\"drum-pad\" id=\"drum-pad-6\" onClick={() => playThis(5)}>D</button>\r\n            <button className=\"drum-pad\" id=\"drum-pad-7\" onClick={() => playThis(6)}>Z</button>\r\n            <button className=\"drum-pad\" id=\"drum-pad-8\" onClick={() => playThis(7)}>X</button>\r\n            <button className=\"drum-pad\" id=\"drum-pad-9\" onClick={() => playThis(8)}>C</button>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DrumPad","C:\\GitHub\\daveyloper-react\\src\\components\\works\\calculator\\calculator.js",["110","111","112"],"import React, {useState, useEffect} from \"react\"\r\nimport \"./calculator.css\"\r\nimport {Helmet} from \"react-helmet\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Calculator() {\r\n\r\n    const [result, setResult] = useState(null)\r\n    const [num1, setNum1] = useState([])\r\n    const [operator, setOperator] = useState(null)\r\n    const [num2, setNum2] = useState([])\r\n    const [operated, setOperated] = useState(false)\r\n    const number1 = parseFloat(num1.join(''))\r\n    const number2 = parseFloat(num2.join(''))\r\n    const dispRes = result === null ? \"\" : `= ${result}`\r\n    const [display, setDisplay]= useState(null) \r\n    const [fullEq, setFullEq] = useState(``)\r\n\r\n\r\n\r\n   function handleNums(num) {\r\n    if (operated === false && num1.length < 15) {\r\n            setNum1([...num1, num])\r\n        } else if (operated === true && num2.length < 15) \r\n            {setNum2([...num2, num])}\r\n    if (result !== null) {handleClear()}\r\n    }\r\n\r\n    function handleNegative() {\r\n        if (operated === false) {\r\n            setNum1([number1 * -1])\r\n        } else {setNum2([number2*-1])}\r\n     } \r\n  \r\n    useEffect(() => {\r\n        if (operated === false) {\r\n            \r\n            setDisplay(number1)\r\n            console.log(`num1 = ${num1}`)\r\n\r\n        }}, [num1, operator,number1,number2,result,num2,display])\r\n\r\n    useEffect(()=>{\r\n        if (operated === true) {\r\n            setDisplay(number2)\r\n            console.log(`num2 = ${num2}`)\r\n\r\n        }\r\n       \r\n    }, [num2])\r\n\r\n\r\n    useEffect(() => {\r\n        let firstNum\r\n        let secondNum\r\n        let op\r\n        \r\n        if (isNaN(number1)){firstNum = \"\"} else {firstNum=number1};\r\n        if (isNaN(number2)){secondNum = \"\"} else {secondNum=number2};\r\n        if (operator === null) {op = \"\"} else {op = operator};\r\n\r\n        setFullEq(`${firstNum} ${op} ${secondNum}`)\r\n    } )\r\n\r\n    function handleEquals() {\r\n        let res\r\n        if (operator === \"*\") {\r\n            res = number1 * number2\r\n        } else if (operator === \"/\") {\r\n            res = number1 / number2\r\n        } else if (operator === \"+\") {\r\n            res = number1 + number2\r\n        } else if (operator === \"-\") {\r\n            res = number1 - number2\r\n        }\r\n        setResult(res)\r\n        setDisplay(res)\r\n       \r\n    }\r\n\r\n    function handleOperator(opr) {\r\n        \r\n        setOperator(\"\")\r\n        setOperated(true)\r\n        setOperator(opr)\r\n\r\n        if (result !== null ) {\r\n            handleEquals()\r\n            setNum1([result])\r\n            setNum2([])\r\n            setDisplay(0)\r\n            setResult(null)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        let op = String(operator)\r\n        console.log(`op = ${operator}`)\r\n        setDisplay(op)\r\n    }, [operator])\r\n\r\n   \r\n    function handleClear() {\r\n        setNum1([])\r\n        setNum2([])\r\n        setOperated(false)\r\n        setOperator(\"\")\r\n        setResult(null)\r\n        setDisplay(0)\r\n    }\r\n    return (\r\n        <div id=\"calculator-box\">\r\n            <Helmet>\r\n                <title>Calculator - Davit Lursmanashvili</title>\r\n                <meta type=\"description\" content=\"This is a javascript calculator I built with React. Check out my other projects on my website.\" />\r\n            </Helmet>\r\n            <div id=\"calculator-display\">\r\n                <p classname=\"calculator-text\">{fullEq}{dispRes}</p>\r\n                <p classname=\"calculator-text\" >{isNaN(display) ? \"\" : display }{ isNaN(number2) ?  operator:\"\"}</p>\r\n            </div>\r\n\r\n            \r\n            <button id=\"one\" className=\"calculator-button\" value=\"1\" onClick={event => handleNums(event.target.value)} >1</button>     \r\n            <button id=\"two\" className=\"calculator-button\" value=\"2\" onClick={event => handleNums(event.target.value)} >2</button>   \r\n            <button id=\"three\" className=\"calculator-button\" value=\"3\" onClick={event => handleNums(event.target.value)} >3</button>     \r\n            <button id=\"four\" className=\"calculator-button\" value=\"4\" onClick={event => handleNums(event.target.value)} >4</button>   \r\n            <button id=\"five\" className=\"calculator-button\" value=\"5\" onClick={event => handleNums(event.target.value)} >5</button>  \r\n            <button id=\"six\" className=\"calculator-button\" value=\"6\" onClick={event => handleNums(event.target.value)} >6</button> \r\n            <button id=\"seven\" className=\"calculator-button\" value=\"7\" onClick={event => handleNums(event.target.value)} >7</button> \r\n            <button id=\"eight\" className=\"calculator-button\" value=\"8\" onClick={event => handleNums(event.target.value)} >8</button>   \r\n            <button id=\"nine\" className=\"calculator-button\" value=\"9\" onClick={event => handleNums(event.target.value)} >9</button>  \r\n            <button id=\"zero\" className=\"calculator-button\" value=\"0\" onClick={event => handleNums(event.target.value)} >0</button>        \r\n            <button id=\"plusmin\" className=\"calculator-button\" value=\"-\" onClick={event => handleNegative(event.target.value)}>-/+</button>\r\n\r\n            <button id=\"add\"  className=\"calculator-button\" value=\"+\" onClick={event => handleOperator(event.target.value)}>+</button>    \r\n            <button id=\"subtract\" className=\"calculator-button\" value=\"-\" onClick={event => handleOperator(event.target.value)}>-</button>  \r\n            <button id=\"multiply\" className=\"calculator-button\" value=\"*\" onClick={event => handleOperator(event.target.value)}>*</button>  \r\n            <button id=\"divide\" className=\"calculator-button\" value=\"/\" onClick={event => handleOperator(event.target.value)}>/</button>  \r\n            <button id=\"equals\" className=\"calculator-button\" onClick={()=> handleEquals()}>=</button>   \r\n            <button id=\"decimal\" className=\"calculator-button\" value=\".\" onClick={event => handleNums(event.target.value)}>.</button>     \r\n            <button id=\"clear\" className=\"calculator-button\" onClick={() => handleClear()} >AC</button>  \r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calculator","C:\\GitHub\\daveyloper-react\\src\\components\\home\\About.js",["113"],"C:\\GitHub\\daveyloper-react\\src\\components\\works\\25timer\\25timer.js",["114"],"import React, {useState, useEffect, useRef} from \"react\"\r\nimport \"./25timer.css\"\r\nimport useSound from \"use-sound\"\r\nimport Beep from \"./beep.wav\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport {faArrowUp, faArrowDown} from \"@fortawesome/free-solid-svg-icons\"\r\nimport {Helmet} from \"react-helmet\"\r\n\r\n\r\n\r\n\r\nfunction Timer25() {\r\n\r\n        const [session, setSession] = useState(1500)\r\n        const [rest, setRest] = useState(300)\r\n        const [seconds, setSeconds] = useState(session)\r\n        const secondsLeft = seconds % 60\r\n        const secondsLeft0 = secondsLeft < 10 ? \"0\" + secondsLeft : secondsLeft\r\n        const minutes = Math.floor((seconds / 60))\r\n        const sessionMinutes = Math.floor(session / 60)\r\n        const restMinutes = Math.floor(rest / 60)\r\n        const countRef = useRef(null)\r\n        const [sessionPhase, setSessionPhase] = useState(true)\r\n        const [timerRunning, setTimerRunning] = useState(false)\r\n        const [timerHasBeenRun, setTimerHasBeenRun] = useState(false)\r\n        const [Sound] = useSound(Beep)\r\n        let playSound = () => {Sound()}\r\n\r\n\r\n        function sessionStart() {\r\n            if (sessionPhase === true && timerHasBeenRun === false) {\r\n                setSeconds(session)\r\n                \r\n            } else if (sessionPhase === false && timerHasBeenRun === false){\r\n                setSeconds(rest)\r\n                \r\n            }\r\n\r\n            if (timerRunning === false) { countRef.current = setInterval(() => {\r\n               setSeconds(seconds => seconds - 1)\r\n               \r\n                   \r\n               \r\n               console.log(seconds)\r\n            }, 1000);} else if (timerRunning === true && timerHasBeenRun === true) {\r\n                clearInterval(countRef.current)\r\n            }\r\n            setTimerRunning(!timerRunning)\r\n            setTimerHasBeenRun(true)\r\n        }\r\n        \r\n        useEffect(() => {\r\n            if (seconds < 0 && sessionPhase === true) {\r\n                playSound()\r\n                setSeconds(rest) \r\n                setSessionPhase(false)\r\n            } else if \r\n            (seconds < 0 && sessionPhase === false) {\r\n                playSound()\r\n                setSeconds(session)\r\n                setSessionPhase(true)\r\n            }\r\n        }, [seconds])\r\n\r\n\r\n        function sessionIncrement() {\r\n            setSession(session => session + 60)\r\n            console.log(session)\r\n        }\r\n        function sessionDecrement() {\r\n           session > 60 && setSession(session => session - 60)\r\n            console.log(session)\r\n        }\r\n        function restIncrement() {\r\n              setRest(rest => rest + 60)\r\n        }\r\n        function restDecrement() {\r\n            rest > 60 && setRest(rest => rest - 60)\r\n        }\r\n        function handleReset() {\r\n            clearInterval(countRef.current)\r\n            setSeconds(session)\r\n            setTimerRunning(false)\r\n            setTimerHasBeenRun(false)\r\n            setSessionPhase(true)\r\n\r\n        }\r\n\r\n    return (\r\n        <div id=\"timer-container\">\r\n            <Helmet>\r\n                <title>\r\n                    Interval Timer - Davit Lursmanashvili\r\n                </title>\r\n                <meta type=\"description\" content=\"An interval timer built with React by me. Customizable countdowns, automatic interval switch, start/pause, reset functions.\" />\r\n            </Helmet>\r\n            <h1 id=\"mytimer-title\">Interval Timer</h1>\r\n            <div id=\"timer-session-box\">\r\n                <h3 class=\"timer-sb-label\">Session Length: </h3>\r\n                <p className=\"timer-sb-length\">{sessionMinutes}</p>\r\n                <button id=\"timer-session-decrement\" className=\"mytimer-button mytimer-increment\" onClick={sessionDecrement}><FontAwesomeIcon icon={faArrowDown} /></button>\r\n                <button id=\"timer-session-increment\" className=\"mytimer-button mytimer-decrement\" onClick={sessionIncrement}><FontAwesomeIcon icon={faArrowUp} /></button>\r\n            </div>\r\n            <div  id=\"timer-rest-box\">\r\n                <h3 class=\"timer-sb-label\">Break Length: </h3>\r\n                <p className=\"timer-sb-length\">{restMinutes}</p>\r\n                <button id=\"timer-break-decrement\" className=\"mytimer-button mytimer-increment\" onClick={restDecrement}><FontAwesomeIcon icon={faArrowDown} /></button>\r\n                <button id=\"timer-break-increment\" className=\"mytimer-button mytimer-decrement\" onClick={restIncrement}><FontAwesomeIcon icon={faArrowUp} /></button>\r\n            </div>\r\n            <div id=\"timer-display-box\">\r\n                <h3 id=\"mytimer-label\">{sessionPhase ? \"Session\" : \"Break\"}:</h3>\r\n                <p id=\"mytime-left\">{minutes}:{secondsLeft0}</p>\r\n                <button className=\"mytimer-button\" id=\"mytimer-start\" onClick={()=>sessionStart()}>{timerRunning ? \"Pause\":\"Start\"}</button>\r\n                <button className=\"mytimer-button\" id=\"mytimer-reset\" onClick={() => handleReset()}>Reset</button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Timer25","C:\\GitHub\\daveyloper-react\\src\\components\\works\\carousel\\carousel.js",["115","116"],"import React, {useState, useEffect} from \"react\"\r\nimport \"./carousel.css\"\r\n\r\n\r\n\r\n\r\nfunction Carousel(props) {\r\n    const {children} = props\r\n    const [index, setIndex] = useState(0)\r\n    const [length, setLength] = useState(children.length)\r\n    const mobile = window.innerWidth > 768 ? \"false\" : \"true\"\r\n    function breakpoints() {\r\n        let x\r\n        if (window.innerWidth <= 480) { return x === \"mobile\" } else \r\n        if (window.innerWidth > 480 && window.innerWidth <= 768) {return x === \"tablet\"} else \r\n        if (window.innerWidth > 768) {return x === \"desktop\"}\r\n        return x\r\n    }\r\n    const breakpoint = breakpoints()\r\n    const itemWidth = () => {\r\n        let x = props.show\r\n        let width = 100 / x\r\n        return width\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setLength(children.length)\r\n    }, [children])\r\n\r\n\r\n\r\n\r\n    const next = () => {\r\n        if (index < (length-1))  {\r\n            setIndex(prevState => prevState + 1)\r\n        }\r\n        // sets the index to next if you are not on the last slide\r\n    }\r\n\r\n    const previous = () => {\r\n        if (index > 0) {\r\n            setIndex(prevState => prevState - 1)\r\n        }\r\n        // sets the index to be the previous if you are further than first slide\r\n    }\r\n\r\n  \r\n\r\n    return (\r\n        <div className=\"carousel-outer-container\" style={{\r\n            height: props.outerHeight, \r\n            width: props.outerWidth,\r\n            padding: props.outerPadding,\r\n            }}>\r\n        <div className=\"carousel-inner-container\" style={{height: props.innerHeight, width: props.innerWidth}}>\r\n            <div className=\"carousel-wrapper\"        \r\n            > \r\n               { index > 0 && <button className=\"left-arrow\" onClick={previous}>\r\n                &lt;\r\n                </button> }\r\n                <div className=\"carousel-content-wrapper\">\r\n               { index < children.length - props.show &&    <button className=\"right-arrow\" onClick={next}>\r\n                    &gt;\r\n                </button>}\r\n                {/* the sliding is done by the translateX below. it translates by (100% of the slides * the index of the slide) from the starting position.  */}\r\n                    <div className=\"carousel-content\"\r\n                    style={{transform: mobile === \"false\" && `translateX(-${index * 100 }%)`,\r\n                            width: mobile === \"false\" && `${100 / props.show}%`}}\r\n                    >\r\n                        { children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Carousel","C:\\GitHub\\daveyloper-react\\src\\components\\works\\carousel\\slide.js",[],"C:\\GitHub\\daveyloper-react\\src\\components\\reusable\\button-lifter\\buttonLifter.js",[],["117","118"],"C:\\GitHub\\daveyloper-react\\src\\components\\works\\carousel\\demo\\carouselView.js",[],{"ruleId":"119","severity":1,"message":"120","line":6,"column":9,"nodeType":"121","messageId":"122","endLine":6,"endColumn":17},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"119","severity":1,"message":"127","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":17},{"ruleId":"119","severity":1,"message":"128","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"129","line":6,"column":34,"nodeType":"121","messageId":"122","endLine":6,"endColumn":47},{"ruleId":"119","severity":1,"message":"130","line":22,"column":12,"nodeType":"121","messageId":"122","endLine":22,"endColumn":22},{"ruleId":"119","severity":1,"message":"131","line":22,"column":24,"nodeType":"121","messageId":"122","endLine":22,"endColumn":37},{"ruleId":"132","severity":1,"message":"133","line":59,"column":17,"nodeType":"134","endLine":59,"endColumn":95},{"ruleId":"119","severity":1,"message":"135","line":1,"column":26,"nodeType":"121","messageId":"122","endLine":1,"endColumn":35},{"ruleId":"119","severity":1,"message":"136","line":21,"column":11,"nodeType":"121","messageId":"122","endLine":21,"endColumn":22},{"ruleId":"119","severity":1,"message":"135","line":1,"column":26,"nodeType":"121","messageId":"122","endLine":1,"endColumn":35},{"ruleId":"137","severity":1,"message":"138","line":134,"column":11,"nodeType":"139","messageId":"140","endLine":153,"endColumn":10},{"ruleId":"141","severity":1,"message":"142","line":47,"column":13,"nodeType":"143","endLine":47,"endColumn":65,"suggestions":"144"},{"ruleId":"141","severity":1,"message":"145","line":56,"column":8,"nodeType":"143","endLine":56,"endColumn":14,"suggestions":"146"},{"ruleId":"141","severity":1,"message":"147","line":59,"column":5,"nodeType":"121","endLine":59,"endColumn":14,"suggestions":"148"},{"ruleId":"119","severity":1,"message":"149","line":9,"column":16,"nodeType":"121","messageId":"122","endLine":9,"endColumn":26},{"ruleId":"141","severity":1,"message":"150","line":63,"column":12,"nodeType":"143","endLine":63,"endColumn":21,"suggestions":"151"},{"ruleId":"119","severity":1,"message":"152","line":19,"column":11,"nodeType":"121","messageId":"122","endLine":19,"endColumn":21},{"ruleId":"119","severity":1,"message":"153","line":20,"column":11,"nodeType":"121","messageId":"122","endLine":20,"endColumn":20},{"ruleId":"123","replacedBy":"154"},{"ruleId":"125","replacedBy":"155"},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["156"],"no-negated-in-lhs",["157"],"'Hamburger' is defined but never used.","'Link' is defined but never used.","'faAddressCard' is defined but never used.","'quoteIndex' is assigned a value but never used.","'setQuoteIndex' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'useEffect' is defined but never used.","'placeholder' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'operated'. Either include it or remove the dependency array.","ArrayExpression",["158"],"React Hook useEffect has missing dependencies: 'number2' and 'operated'. Either include them or remove the dependency array.",["159"],"React Hook useEffect contains a call to 'setFullEq'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [number1, number2, operator] as a second argument to the useEffect Hook.",["160"],"'InlineIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'playSound', 'rest', 'session', and 'sessionPhase'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSeconds' needs the current value of 'rest'.",["161"],"'breakpoint' is assigned a value but never used.","'itemWidth' is assigned a value but never used.",["156"],["157"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [num1, operator, number1, number2, result, num2, display, operated]",{"range":"170","text":"171"},"Update the dependencies array to be: [num2, number2, operated]",{"range":"172","text":"173"},"Add dependencies array: [number1, number2, operator]",{"range":"174","text":"175"},"Update the dependencies array to be: [playSound, rest, seconds, session, sessionPhase]",{"range":"176","text":"177"},[1237,1289],"[num1, operator, number1, number2, result, num2, display, operated]",[1454,1460],"[num2, number2, operated]",[1825,1825],", [number1, number2, operator]",[2305,2314],"[playSound, rest, seconds, session, sessionPhase]"]